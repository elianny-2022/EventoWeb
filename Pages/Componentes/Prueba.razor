Evento

@* @page "/eventos"
@inject HttpClient Http
@using System.Net.Http.Json
@inject NavigationManager NavigationManager

<h3>Lista de Eventos</h3>

@if (eventos == null)
{
    <p>Cargando eventos...</p>
}
else if (eventos.Count == 0)
{
    <p>No hay eventos disponibles.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre Evento</th>
                <th>Tipo de Evento</th>
                <th>Disponibilidad</th>
                <th>Ubicacion</th>
                <th>Reservar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var evento in eventos)
            {
                <tr>
                    <td>@evento.eventoId</td>
                    <td>@evento.nombreEvento</td>
                    <td>@evento.tipoEvento</td>
                    <td>@evento.disponibilidad</td>
                    <td>@evento.ubicacion</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => VerBoletos(evento.eventoId)">Ver Boletos</button>
                        @*   @if (eventoSeleccionado == null || eventoSeleccionado.eventoId != evento.eventoId)
                        {
                            <button class="btn btn-primary" @onclick="() => SeleccionarEvento(evento)">Seleccionar</button>
                        }
                        else
                        {
                            <input type="number" min="1" max="@eventoSeleccionado.cantidadBoletos" value="@cantidadReserva" @oninput="e => cantidadReserva = Convert.ToInt32(e.Value)">
                            <button class="btn btn-primary" 
                            disabled="@eventoSeleccionado.cantidadBoletos <= 0 || cantidadReserva <= 0 || 
                            cantidadReserva > eventoSeleccionado.AsientosDisponibles"
                             @onclick="() => Reservar(eventoSeleccionado, cantidadReserva)">Reservar</button>
                        } 
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
@if (reservaExitosa)
{
    <p>Reserva realizada con éxito.</p>
}
else if (reservaFallida)
{
    <p>No hay asientos disponibles para este evento.</p>
}

@code {
    List<EventoDto> eventos;
    EventoDto eventoSeleccionado;
     int cantidadReserva = 1;
    bool reservaExitosa = false;
    bool reservaFallida = false;


    protected override async Task OnInitializedAsync()
    {
        await GetEvento();
    }

    private async Task GetEvento()
    {
        eventos = await Http.GetFromJsonAsync<List<EventoDto>>("/evento/list");
        Console.WriteLine(" Eventos " + eventos);
    } 
     protected override async Task OnInitializedAsync()
    {
        await CargarEventos();
    }

    private async Task CargarEventos()
    {
        eventos = await Http.GetFromJsonAsync<List<EventoDto>>("/evento/list");
    }

    private void VerBoletos(long eventoId)
    {
        NavigationManager.NavigateTo($"/boletos/{eventoId}");
    }
    
   private void SeleccionarEvento(EventoDto evento)
    {
        eventoSeleccionado = evento;
        cantidadReserva = 1;
        reservaExitosa = false;
        reservaFallida = false;
    }

     private async Task Reservar(EventoDto evento, int cantidadAsientos)
    {
        var indice = eventos.IndexOf(evento);
        if (indice != -1 && evento.cantidadBoletos >= cantidadAsientos)
        {
            evento.cantidadBoletos -= cantidadAsientos;
            reservaExitosa = true;
            reservaFallida = false;
            eventos[indice] = evento;
        }
        else
        {
            reservaExitosa = false;
            reservaFallida = true;
        }
    }
}
 *@

 @* @page "/boletos/{eventoId}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Seleccionar Boletos</h3>

@if (evento == null)
{
    <p>Cargando evento...</p>
}
else
{
    <h4>Evento: @evento.nombreEvento</h4>
    <p>Tipo de Evento: @evento.tipoEvento</p>
    <p>Cantidad Disponibles: @evento.cantidadBoletos</p>

    <label>Cantidad de Boletos:</label>
    <input type="number" min="1" max="@evento.cantidadBoletos" value="@cantidadBoletos" @oninput="e => cantidadBoletos = Convert.ToInt32(e.Value)">

    <button class="btn btn-primary" disabled="@evento.cantidadBoletos <= 0 || cantidadBoletos <= 0 || cantidadBoletos > evento.AsientosDisponibles" @onclick="Reservar">Reservar</button>
}

@code {
    EventoDto evento;
    int cantidadBoletos = 1;

    [Parameter]
    public string eventoId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarEvento();
    }

    private async Task CargarEvento()
    {
        evento = await Http.GetFromJsonAsync<EventoDto>($"/eventos/find/{eventoId}");
    }

    private async Task Reservar()
    {
        if (evento.cantidadBoletos >= cantidadBoletos)
        {
            // Realizar la reserva en la API aquí
            // ...

            // Redirigir al usuario a la página de confirmación
            NavigationManager.NavigateTo("/confirmacion");
        }
    }

} *@



@* @page "/boletos/{eventoId}"
@inject HttpClient Http

<button @onclick ="GetBoleto">Obtener boletos</button>

 @code{
      
    private async Task GetBoleto(){
        var boleto = await Http.GetFromJsonAsync<List<BoletoDto>>("/listboleto/boleto");
            Console.WriteLine("Hey, hola mundo " +boleto );
    }

    
} *@ 