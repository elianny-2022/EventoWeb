@page "/eventos"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div className="evento-container" class="card border-secondary mb-3" style="Margin: 15px;">
        <div class="card shadow-lg">
            <div class="card">
               <div class="card-header">
                <div class="card text-center">

            <h3>Event Planning</h3>

        @if (eventos == null)
        {
            <p>Cargando eventos...</p>
        }
        else if (eventos.Count == 0)
        {
            <p>No hay eventos disponibles.</p>
        }
        else
        {
        
            <table class="table table-striped border-secondary mt-4" style="cursor: pointer;">
                <thead>
                    <tr class="table">
                        <th>Nombre</th>
                        <th>Tipo de Evento</th>
                        <th>Fecha</th>
                        <th>Hora</th>
                        <th>Ubicaci√≥n</th>
                        <th>Descripcion</th>
                    </tr>
                </thead>
                <tbody>
                    
                    @foreach (var evento in eventos)
                    {
                        <tr>
                            <td>@evento.nombreEvento</td>
                            <td>@evento.tipoEvento</td>
                            <td>@evento.fecha</td>
                            <td>@evento.hora</td>
                            <td>@evento.ubicacion</td>
                            <td>@evento.descripcion</td>
                            <td><button type="button" class="btn btn-outline-info btn-sm" @onclick="() => 
                                    VerBoletos(evento.eventoId)"> Ver Boletos</button>
                            </td>
                        </tr>
                    }
                
                </tbody>
            </table>
   
      
}
</div>
</div>
</div> 
</div>
</div>
@code {
    List<EventoDto> eventos ;

    protected override async Task OnInitializedAsync()
    {
        await CargarEventos();
    }

    private async Task CargarEventos()
    {
        eventos = await Http.GetFromJsonAsync<List<EventoDto>>("/eventos/evento/list");
    }

    private void VerBoletos(long eventoId)
    {
        NavigationManager.NavigateTo($"/boletos/{eventoId}");
    }
} 